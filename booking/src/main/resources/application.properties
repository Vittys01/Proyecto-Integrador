server.port=8080
server.servlet.context-path=/api

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=mysql

spring.datasource.url=jdbc:mysql://db-restore.cnyqegjgetrv.us-east-2.rds.amazonaws.com/0521PTC8N2db_GRUPO3
spring.datasource.username=0521PTC8N2db_GRUPO3
spring.datasource.password=ohC6aidi

logging.level.org.springframework.web=info
logging.level.org.springframework.context=info

spring.jackson.product-naming-strategy=SNAKE_CASE




#INITIALIZATION MODE-----------------------------------------
# ***Spring Boot >=v2.5.0 --> USE TO ENABLE ' spring.sql.init.mode=always '     USE TO DISABLE ' spring.sql.init.mode=never '
spring.sql.init.mode=never
# ***Spring Boot <v2.5.0
#spring.datasource.initialization-mode=always

#If the scripts cause exceptions, the application fails to start. You can tune that behavior by setting
#spring.sql.init.continue-on-error=true

#This will defer data source initialization until after any EntityManagerFactory beans have been created and initialized.
spring.jpa.defer-datasource-initialization=true

#This allows you to switch to database-specific scripts if necessary. For example, you might choose to set it to the vendor name of the database (hsqldb, h2, oracle, mysql, postgresql, and so on).
spring.sql.init.platform=mysql
#INITIALIZATION MODE-----------------------------------------